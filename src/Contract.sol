// SPDX-License-Identifier: MIT
pragma solidity ^0.8.15;

// Contract has been tested only with Solidity v0.8.15 and optimizer_runs=500.
// With a different compiler configuration, the bytecode may change, causing
// the bytecode offset of ADDRESSES to change, breaking the contract.
// Run test_get_offset() with 3 verbosity to get the offset
contract Contract {
    // ADDRESSES is the concatenation of 128 sorted-increasing mined addresses.
    // The first 2 bytes of address i is 241 + 32 * i, the address's offset in the bytecode
    // Run test_get_offset() with 3 verbosity to get the offset
    bytes public constant ADDRESSES = hex"";

    function auth() external payable  {
        assembly ("memory-safe") {
            // The first 2 bytes of caller() encodes what offset to copy
            codecopy(0, shr(144, caller()), 32)
            // If the (contract code at msg.sender >> 144) != msg.sender, revert.
            if xor(mload(0), caller()) {
                revert(0, 0)
            }
        }
    }
}
